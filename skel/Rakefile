require 'opal/bundle_task'
require 'yaml'
require 'shellwords'

class Header < Hash
	def self.parse (text)
		return unless text

		Header.new(YAML.parse(text.lines.map {|line|
			line[2 .. -1]
		}.join).transform)
	end

	def initialize (data)
		merge! data
	end

	def to_js
		"// ==UserScript==\n" +

		map {|name, value|
			if value.is_a?(Array)
				value.map {|value|
					"// @#{name} #{value}"
				}.join("\n")
			else
				"// @#{name} #{value}"
			end
		}.join("\n") +

		"\n// ==/UserScript==\n\n"
	end
end

Opal::BundleTask.new do |t|
	name   = Dir['*.rb'].first[0 .. -4] rescue nil
	header = File.read("#{name}.rb").match(/\A# ---$(.*?)^# ---$/m).to_a.last rescue nil
	
	fail 'no script found' unless name
	fail 'no header found' unless header

	t.name  = name
	t.out   = "#{name}.user.js"
	t.main  = "#{name}.rb"
	t.files << t.main

	t.header = Header.parse(header).tap {|h|
		h['require'] = [h['require']].unshift(
			'http://adambeynon.github.com/opal/opal.js',
#			'http://adambeynon.github.com/opal/opal-parser.js'
		).flatten.compact
	}.to_js
end

task :default => :bundle

task :clean do
	sh "rm -f #{Dir['*.user.js'].shelljoin}"
end
